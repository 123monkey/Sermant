name: database-write-prohibition integration test
env:
  sermantVersion: 1.0.0
on:
  push:
  pull_request:
    branches:
      - '*'
    paths:
      - 'sermant-agentcore/**'
      - 'sermant-integration-tests/database-write-prohibition-test/**'
      - 'sermant-plugins/sermant-database-write-prohibition/**'
      - '.github/workflows/database_write_prohibition_integration_test.yml'
      - '.github/actions/common/database-write-prohibition/**'
      - '.github/actions/scenarios/database-write-prohibition/**'
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-${{ github.head_ref }}
  cancel-in-progress: true
jobs:
  download-midwares-and-cache:
    name: download midwares and cache
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: cache zookeeper
        uses: actions/cache@v3
        with:
          path: apache-zookeeper-3.6.3-bin.tar.gz
          key: ${{ runner.os }}-apache-zookeeper-3.6.3
          restore-keys: |
            ${{ runner.os }}-apache-zookeeper-3.6.3
      - name: download zookeeper
        run: |
          export ROOT_PATH=$(pwd)
          bash ./sermant-integration-tests/scripts/tryDownloadMidware.sh zk
  build-agent-and-cache:
    name: build agent and cache
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
          cache: maven
      - name: cache agent
        uses: actions/cache@v3
        with:
          path: sermant-agent-*/
          key: ${{ runner.os }}-agent-${{ github.run_id }}
      - name: package agent
        run: |
          sed -i '/sermant-backend/d' pom.xml
          sed -i '/sermant-integration-tests/d' pom.xml
          sed -i '/sermant-injector/d' pom.xml
          mvn package -DskipTests -Ptest --file pom.xml
  test-for-database-write-prohibition-mongodb:
    name: Test for database-write-prohibition mongodb
    runs-on: ubuntu-latest
    needs: [build-agent-and-cache, download-midwares-and-cache]
    strategy:
      matrix:
        include:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 100
      - name: set java version to environment
        run: |
          echo "javaVersion=8" >> $GITHUB_ENV
      - name: common operations
        uses: ./.github/actions/common/database-write-prohibition
      - name: database-write-prohibition-mongodb test for mongodbVersion=${{ matrix.mongodbVersion }}
        uses: ./.github/actions/scenarios/database-write-prohibition/mongodb
  test-for-database-write-prohibition-mysql:
    name: Test for database-write-prohibition mysql
    runs-on: ubuntu-latest
    needs: [build-agent-and-cache, download-midwares-and-cache]
    strategy:
      matrix:
        include:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 100
      - name: set java version to environment
        run: |
          echo "javaVersion=8" >> $GITHUB_ENV
      - name: common operations
        uses: ./.github/actions/common/database-write-prohibition
      - name: database-write-prohibition-mysql test for mysqlVersion=${{ matrix.mysqlVersion }}
        uses: ./.github/actions/scenarios/database-write-prohibition/mysql